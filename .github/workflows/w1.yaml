name: s1
on:
  workflow_dispatch:
    inputs:
      # TARGET_BRANCH:
      #   description: "Feature branch with updated changes"
      #   required: true
      #   type: string
      ENV_VAR:
        description: "Environment on which changes needs to be tested"
        required: true
        type: choice
        options:
          - dev
          - qa
          - prod
      # PR_NUMBER:
      #   description: "PR number which is opened for feature branch."
      #   required: true
      #   type: string
jobs:
  set_config:
    runs-on: ubuntu-latest
    outputs:
      regions-list: ${{ steps.environment.outputs.regions-list }}     
    steps:
      - name: Set Output Variables
        id: environment
        run: |
          if [ "${{ inputs.ENV_VAR }}" == "dev" ]; then
            REGIONS='
              {"region": "use1"},
              {"region": "euw1"},
            '
          elif [ "${{ inputs.ENV_VAR }}" == "qa" ]; then
            REGIONS='
              {"region": "euw1"},
            '
          elif [ "${{ inputs.ENV_VAR }}" == "prod" ]; then
            REGIONS='
              {"region": "apse3"},
              {"region": "mec1"},
              {"region": "apse2"},
              {"region": "apse1"},
              {"region": "usw2"},
              {"region": "use1"},
              {"region": "euc1"},
              {"region": "euw1"},
            '
          fi
          echo ::set-output name=regions-list::{\"include\":[$REGIONS]}

  update_targate_branch:
    runs-on: ubuntu-latest
    needs: [set_config]
    strategy:
      matrix: ${{ fromJson(needs.set_config.outputs.regions-list) }}
    steps:
      - name: Switching Argocd target branch and matching cluster
        id: match_cluster
        run: |-
          mkdir test
          echo "zfdzzC1_HOST" >> test/${{ inputs.ENV_VAR }}_${{ matrix.region }}.txt

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.ENV_VAR }}_${{ matrix.region }}
          path: test/

  match_cluster:  #it will download data from update_targate_branch but sometimes if the above jobs fails than download artifact wont work so need a if condition
    runs-on: ubuntu-latest
    needs: update_targate_branch  
    steps:
      - name: Save Env variable
        run: |
          mkdir data
          echo "test" > ./data/targetbranch
          echo ${{ inputs.ENV_VAR }} > ./data/environment
          echo "123" > ./data/pr
      - uses: actions/upload-artifact@v4
        with:
          name: inputdata
          path: data/